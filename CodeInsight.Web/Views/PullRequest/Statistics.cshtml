@using FuncSharp
@model CodeInsight.Web.Models.PullRequest.PullRequestStatisticsViewModel

<div class="container" style="padding-top: 25px">
    @{
        if (Model.Error.NonEmpty)
        {
            <div class="row" role="alert">
                <div class="col-md-6 alert alert-danger">
                    @Model.Error.Get()
                </div>
            </div>
        }
    }
    <div class="row">
        <form asp-controller="PullRequest" , asp-action="@ViewContext.RouteData.Values["action"]" method="post">
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label for="fromDate">Start</label>
                    <input data-provide="datepicker"
                           data-date-format="dd/mm/yyyy"
                           class="form-control"
                           id="fromDate"
                           name="fromDate"
                           value="@Model.Configuration.Interval.Start.ToString("dd/MM/yyyy", null)" />
                </div>
                <div class="form-group col-md-4">
                    <label for="toDate">End</label>
                    <input data-provide="datepicker"
                           data-date-format="dd/mm/yyyy"
                           class="form-control"
                           id="toDate"
                           name="toDate"
                           value="@Model.Configuration.Interval.End.ToString("dd/MM/yyyy", null)" />
                </div>
                <div class="form-group col-md-2">
                    <label class="invisible">I am hidden</label>
                    <button type="submit" class="btn btn-primary form-control">Submit</button>
                </div>
            </div>
        </form>
    </div>
    <div class="row">
        @foreach (var chart in Model.Charts)
        {
            <h4 class="display-4" style="margin-bottom: 25px">@chart.Title</h4>
            <div class="card-columns cols-1">
                <div class="card">
                    <div class="card-body">
                        <canvas id="@chart.Id" width="800" height="800"></canvas>
                    </div>
                </div>
            </div>
        }
    </div>
    <h4 class="display-4" style="margin-bottom: 25px">Pull Requests (@Model.PullRequests.Count)</h4>
    <div class="row">
        <table class="table">
            <thead class="thead-light">
            <th>Title</th>
            <th>Created</th>
            <th>LifeTime (hours)</th>
            <th>Additions</th>
            <th>Deletions</th>
            <th>Author</th>
            </thead>
            <tbody>
                @foreach (var pr in Model.PullRequests.OrderByDescending(p => p.Lifetime.IsEmpty).ThenBy(p => p.CreatedAt))
                {
                    <tr>
                        <td>@pr.Title</td>
                        <td>@pr.CreatedAt.ToString("dd/MM/yyyy", null)</td>
                        <td>@pr.Lifetime.Map(t => t.TotalHours.ToString("N2")).GetOrElse("Open")</td>
                        <td>@pr.Additions</td>
                        <td>@pr.Deletions</td>
                        <td>@pr.AuthorId.ToString()</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        @foreach (var chart in Model.Charts)
        {
            @Html.Raw(chart.JsChart.CreateChartCode(chart.Id));
        }
    </script>
}
